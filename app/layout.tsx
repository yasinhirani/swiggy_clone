"use client";
import Navbar from "@/core/components/Navbar";
import "./globals.css";
import type { Metadata } from "next";
import { Mukta } from "next/font/google";
import { useState, useMemo, useEffect } from "react";
import { ILocationInfo } from "@/core/model/location.model";
import { CartContext, LoadingContext, LocationContext } from "@/core/context";
import { UserProvider } from "@auth0/nextjs-auth0/client";

const inter = Mukta({
  weight: ["300", "400", "500", "600", "700", "800"],
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title:
    "Order food online from India's best food delivery service. Order from restaurants near you",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [locationInfo, setLocationInfo] = useState<ILocationInfo | null>(null);
  const [CartData, SetCartData] = useState<ICartData>({
    Items: [],
    RestaurantDetails: null,
  });
  const [loading, setLoading] = useState<boolean>(true);

  const locationInfoState = useMemo(
    () => ({
      locationInfo,
      setLocationInfo,
    }),
    [locationInfo]
  );

  const cartDataState = useMemo(
    () => ({
      CartData,
      SetCartData,
    }),
    [CartData]
  );

  const loadingState = useMemo(
    () => ({
      loading,
      setLoading,
    }),
    [loading]
  );

  useEffect(() => {
    setLoading(true);
    if (localStorage.userLocation) {
      const userLocation = JSON.parse(
        localStorage.getItem("userLocation") as string
      );
      setLocationInfo(userLocation);
    }
    if (localStorage.cartData) {
      const localStorageCartData = JSON.parse(
        localStorage.getItem("cartData") as string
      );
      SetCartData(localStorageCartData);
    }
    setLoading(false);
  }, []);
  return (
    <html lang="en">
      <UserProvider>
        <body className={inter.className}>
          <LocationContext.Provider value={locationInfoState}>
            <CartContext.Provider value={cartDataState}>
              <LoadingContext.Provider value={loadingState}>
                <div className="w-full h-full bg-white flex flex-col">
                  {locationInfo && <Navbar />}
                  {children}
                </div>
              </LoadingContext.Provider>
            </CartContext.Provider>
          </LocationContext.Provider>
        </body>
      </UserProvider>
    </html>
  );
}
